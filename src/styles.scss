// Custom Theming for Angular Material
@use '@angular/material' as mat;
// For more information: https://material.angular.io/guide/theming
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$weather-primary: mat.define-palette(mat.$blue-palette);
$weather-accent: mat.define-palette(mat.$blue-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$weather-warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$weather-theme: mat.define-light-theme($weather-primary, $weather-accent, $weather-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($weather-theme);

/* You can add global styles to this file, and also import other style files */
::-webkit-scrollbar {
    width: 8px !important;
    height: 8px !important;
}

::-webkit-scrollbar-thumb {
    background-color: #a7a7a7 !important;
    border-radius: 5px !important;
}

::-webkit-scrollbar-track {
    background-color: transparent !important;
    margin: 2px !important;
}
html,
body {
    height: 100%;
}
body {
    margin: 0;
    font-family: Roboto, 'Helvetica Neue', sans-serif;
}

.search-dialog mat-dialog-container {
    padding: 8px;
}

.ngx-charts .line-highlight {
    display: block !important;
}

.line-chart {
    transform: translate(0, 0) scaleX(1.031);
}

@media only screen and (min-width: 320px) {
    .line-chart {
        transform: translate(0, 0) scaleX(1.23);
    }
}

@media only screen and (min-width: 375px) {
    .line-chart {
        transform: translate(0, 0) scaleX(1.2);
    }
}

@media only screen and (min-width: 425px) {
    .line-chart {
        transform: translate(0, 0) scaleX(1.15);
    }
}

@media only screen and (min-width: 500px) {
    .line-chart {
        transform: translate(0, 0) scaleX(1.13);
    }
}

@media only screen and (min-width: 620px) {
    .line-chart {
        transform: translate(0, 0) scaleX(1.105);
    }
}

@media only screen and (min-width: 768px) {
    .line-chart {
        transform: translate(0, 0) scaleX(1.031);
    }
}

[ngx-charts-x-axis],
[ngx-charts-y-axis] {
    display: none;
}

.sunny {
    color: #ffd400;
}

.clear-night {
    color: #ff23ff;
}

.rainy {
    color: #1783ff;
}

body.dark {
    $weather-primary: mat.define-palette(mat.$blue-palette);
    $weather-accent: mat.define-palette(mat.$blue-palette, A200, A100, A400);

    // The warn palette is optional (defaults to red).
    $weather-warn: mat.define-palette(mat.$red-palette);

    // Create the theme object (a Sass map containing all of the palettes).
    $weather-dark-theme: mat.define-dark-theme($weather-primary, $weather-accent, $weather-warn);

    // Include theme styles for core and each component used in your app.
    // Alternatively, you can import and @include the theme mixins for each component
    // that you are using.
    @include mat.all-component-themes($weather-dark-theme);

    background: #212121;
    color: white;
}
